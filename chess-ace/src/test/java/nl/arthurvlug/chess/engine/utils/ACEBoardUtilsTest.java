package nl.arthurvlug.chess.engine.utils;

import nl.arthurvlug.chess.engine.ace.UnapplyableMoveUtils;
import nl.arthurvlug.chess.engine.ace.board.ACEBoard;
import nl.arthurvlug.chess.engine.ace.board.ACEBoardUtils;
import nl.arthurvlug.chess.engine.ace.board.InitialACEBoard;
import nl.arthurvlug.chess.engine.ace.board.UnapplyFlags;
import org.junit.jupiter.api.Test;

import static org.assertj.core.api.Assertions.assertThat;

public class ACEBoardUtilsTest {
	@Test
	public void testDump() {
		final ACEBoard aceBoard = InitialACEBoard.createInitialACEBoard();
		final ACEBoard clone = aceBoard.cloneBoard();
		assertThat(ACEBoardUtils.stringDump(aceBoard)).isEqualTo(ACEBoardUtils.stringDump(clone));

		int move = UnapplyableMoveUtils.createMove("e2e4", aceBoard);
		aceBoard.apply(move);
		aceBoard.unapply(move,
				false,
				false,
				false,
				false,
				0);
		assertThat(ACEBoardUtils.stringDump(aceBoard)).isEqualTo(ACEBoardUtils.stringDump(clone));

		assertThat(ACEBoardUtils.stringDump(aceBoard)).isEqualTo("""
				toMove=0
				black_kings=
				....♟...
				........
				........
				........
				........
				........
				........
				........
				
				white_kings=
				........
				........
				........
				........
				........
				........
				........
				....♟...
				
				black_queens=
				...♟....
				........
				........
				........
				........
				........
				........
				........
				
				white_queens=
				........
				........
				........
				........
				........
				........
				........
				...♟....
				
				white_rooks=
				........
				........
				........
				........
				........
				........
				........
				♟......♟
				
				black_rooks=
				♟......♟
				........
				........
				........
				........
				........
				........
				........
				
				white_bishops=
				........
				........
				........
				........
				........
				........
				........
				..♟..♟..
				
				black_bishops=
				..♟..♟..
				........
				........
				........
				........
				........
				........
				........
				
				white_knights=
				........
				........
				........
				........
				........
				........
				........
				.♟....♟.
				
				black_knights=
				.♟....♟.
				........
				........
				........
				........
				........
				........
				........
				
				white_pawns=
				........
				........
				........
				........
				........
				........
				♟♟♟♟♟♟♟♟
				........
				
				black_pawns=
				........
				♟♟♟♟♟♟♟♟
				........
				........
				........
				........
				........
				........
				
				occupiedSquares=[65535, -281474976710656]
				unoccupied_board=
				........
				........
				♟♟♟♟♟♟♟♟
				♟♟♟♟♟♟♟♟
				♟♟♟♟♟♟♟♟
				♟♟♟♟♟♟♟♟
				........
				........
				
				occupied_board=
				♟♟♟♟♟♟♟♟
				♟♟♟♟♟♟♟♟
				........
				........
				........
				........
				♟♟♟♟♟♟♟♟
				♟♟♟♟♟♟♟♟
				
				enemy_and_empty_board=
				♟♟♟♟♟♟♟♟
				♟♟♟♟♟♟♟♟
				♟♟♟♟♟♟♟♟
				♟♟♟♟♟♟♟♟
				♟♟♟♟♟♟♟♟
				♟♟♟♟♟♟♟♟
				........
				........
				
				white_king_or_rook_queen_side_moved=false
				white_king_or_rook_king_side_moved=false
				black_king_or_rook_queen_side_moved=false
				black_king_or_rook_king_side_moved=false
				pieces=
				♜♞♝♛♚♝♞♜
				♟♟♟♟♟♟♟♟
				........
				........
				........
				........
				♙♙♙♙♙♙♙♙
				♖♘♗♕♔♗♘♖
				repeatedMove=0
				zobristHash=-1072491330
				plyStack=[]""");
	}
}
